on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Build linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore src/PickFromFile.sln
      - name: Build
        run: dotnet build src/PickFromFile.sln --no-restore --configuration Release
      - name: Publish
        run: dotnet publish src/PickFromFile.sln --configuration Release --output publish --no-build
      - name: Zip Release Linux
        uses: thedoctor0/zip-release@master
        with:
          filename: 'publish/PickFromFile-linux.zip'
          path: 'publish'
          exclusions: '*.json*'
      - uses: actions/upload-artifact@v2
        with:
          name: PickFromFile-linux
          path: publish/PickFromFile-linux.zip
  build_win:
    name: Build windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore src/PickFromFile.sln
      - name: Build
        run: dotnet build src/PickFromFile.sln --no-restore --configuration Release
      - name: Publish
        run: dotnet publish src/PickFromFile.sln --configuration Release --output publish --no-build
      - name: Zip Release Windows
        uses: thedoctor0/zip-release@master
        with:
          filename: 'publish/PickFromFile-windows.zip'
          path: 'publish'
          exclusions: '*.json*'
      - uses: actions/download-artifact@v2
        with:
          name: PickFromFile-linux
          path: publish
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: PickFromFile-${{ github.ref }}          
          draft: false
          prerelease: false
      - name: Upload Release Asset - Linux
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: publish/PickFromFile-linux.zip
          asset_name: PickFromFile-linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset - Windows
        id: upload-release-asset-windows 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: publish/PickFromFile-windows.zip
          asset_name: PickFromFile-windows.zip
          asset_content_type: application/zip
